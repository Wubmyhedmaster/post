:: Social [widget]

<<widget "social">>


<div id="relation-display">
	<<silently>>
		<<script>>
			/*data config for non-standard NPCs boxes, allows for different stat configs, custom display data, and dynamic requirements*/
			T.npcConfig = {
				"Robin" : {
					important : true,
					dom :  { name : "Confidence", activeIcon : "img/ui/confidence.png", color: "blue" }
				},
				"Whitney" : {
					important : true,
					love : { maxValue : 30 },
					dom : { maxValue: 20 }
				},
				"Eden" : {
					important : true,
					love : { maxValue: 200 },
					dom : { maxValue: 150 } /*false always hides this stat*/
				},
				"Kylar" : {
					important : true,
					rage : { name : "Jealousy", activeIcon : "img/ui/wideeye.png", color: "green" }
				},
				"Avery" : {
					important : true,
					rage : { requirements : V.averyragerevealed }
				},
				"Great Hawk" : {
					important : true,
				},
				"Sydney" : {
					important : true,
					love : { maxValue: 150 },			
					purity : { requirements : State.variables.NPCName[28].purity > 0, maxValue : 100, minValue : 0 },
					corruption : { requirements : State.variables.NPCName[28].corruption > 0, maxValue : 50, minValue : 0 }
				},
				"Mason" : {
					love : { maxValue : 50 }
				},
				"Alex" : {
					important : true,
					love : { maxValue : 100 },
					lust : { maxValue : 100 },
					dom : { maxValue : 100 }
				},
				"Darryl" : {
					love : { maxValue : 50 }
				},
				"River" : {
					love : { maxValue : 50 }
				},
				"Sam" : {
					love : { maxValue : 50 }
				}
			};

			/*This list is backwards due to the method used to sort via index, with unimportant NPCs being assigned -1*/
			T.importantNpcOrder = [ "Alex", "Great Hawk", "Avery", "Sydney", "Kylar", "Eden", "Whitney", "Robin"];

			/*Clones the NPC list, and orderes it by important first, then by alphabetical order*/
			T.orderedNPCs = V.NPCName.slice().sort(function(a, b) {
				let diff = T.importantNpcOrder.indexOf(a.nam) - T.importantNpcOrder.indexOf(b.nam);

				if(diff == 0) {
					diff = a.nam < b.nam ? 1 : -1;
				}

				return diff;
			});
			T.orderedNPCs.reverse();


			T.importantNPCs = T.orderedNPCs.slice(0, T.importantNpcOrder.length);
			T.otherNPCs = T.orderedNPCs.slice(T.importantNpcOrder.length);
		<</script>>
	<</silently>>
	<h4>Primary Relationships</h4>
	<div id="npc-relations" class="relation-box-list">
		<<for _k = 0; _k lt _importantNPCs.length; _k++>>
			<<relation-box _importantNPCs[_k] _npcConfig[_importantNPCs[_k].nam]>>
		<</for>>
	</div>
	<h4>People of Interest</h4>
	<div id="secondary-npcs" class="relation-box-list">
		<<for _k= 0; _k lt _otherNPCs.length; _k++>>
			<<relation-box _otherNPCs[_k] _npcConfig[_otherNPCs[_k].nam]>>
		<</for>>
	</div>
	<h4>Reputation</h4>
	<<if $farm_stage gte 2>>
		<<silently>>
			/* Farm Animals */
			/*Horses*/
			<<set _farmHorseRepConfig = { currentValue: $farm.beasts.horses, preText: 'The steeds of the farm ', postText: ' you.', states: [
				{ requiredValue: -100,	color: 'pink',		description: 'see you as a fucktoy.', postText: ' '},
				{ requiredValue: -20,	color: 'purple',	description: 'have little respect', postText: ' for you.'},
				{ requiredValue: -5,	color: '',			description: 'are wary of'},
				{ requiredValue: 5,		color: 'lblue',		description: 'trust'},
				{ requiredValue: 20,	color: 'green',		description: 'respect'}
			]}>>
			/*Pigs*/
			<<set _farmPigRepConfig = { currentValue: $farm.beasts.pigs, preText: 'The pigs ', postText: ' you.', states: [
				{ requiredValue: -100,	color: 'pink',		description: 'see you as a fucktoy.', postText: ' '},
				{ requiredValue: -20,	color: 'purple',	description: 'have little respect', postText: ' for you.'},
				{ requiredValue: -5,	color: '',			description: 'are wary of'},
				{ requiredValue: 5,		color: 'lblue',		description: 'trust'},
				{ requiredValue: 20,	color: 'green',		description: 'respect'}
			]}>>
			/*Cattle*/
			<<set _farmCattleRepConfig = { currentValue: $farm.beasts.cattle, preText: 'The cattle ', postText: ' you.', states: [
				{ requiredValue: -100,	color: 'pink',		description: 'see you as an annoyance.', postText: ' '},
				{ requiredValue: -20,	color: 'purple',	description: 'have little respect', postText: ' for you.'},
				{ requiredValue: -5,	color: '',			description: 'are wary of'},
				{ requiredValue: 5,		color: 'lblue',		description: 'trust'},
				{ requiredValue: 20,	color: 'green',		description: 'respect'}
			]}>>
			/*Dogs*/
			<<set _farmDogRepConfig = { currentValue: $farm.beasts.dogs, preText: 'The dogs ', postText: ' you.', states: [
				{ requiredValue: -100,	color: 'pink',		description: 'see you as a fucktoy.', postText: ' '},
				{ requiredValue: -20,	color: 'purple',	description: 'have little respect', postText: ' for you.'},
				{ requiredValue: -5,	color: '',			description: 'are wary of'},
				{ requiredValue: 5,		color: 'lblue',		description: 'trust'},
				{ requiredValue: 20,	color: 'green',		description: 'respect'}
			]}>>
			<<set _farmHorseBoxConfig = 	{ name: "Horses",	description : '<<relation-text _farmHorseRepConfig>>'}>>
			<<set _farmPigBoxConfig = 		{ name: "Pigs",		description : '<<relation-text _farmPigRepConfig>>'}>>
			<<set _farmCattleBoxConfig = 	{ name: "Cattle",	description : '<<relation-text _farmCattleRepConfig>>'}>>
			<<set _farmDogBoxConfig = 		{ name: "Dogs",		description : '<<relation-text _farmDogRepConfig>>'}>>

			<<if $farm_stage gte 5>>
				/* Farm Sabotage */
				<<set _farmSabotageConfig = { currentValue: $farm.aggro, states: [
					{ requiredValue: 0,		color: 'green',		description: 'The farm is peaceful.'},
					{ requiredValue: 1,		color: 'teal',		description: 'Strange people have been seen watching the farm.'},
					{ requiredValue: 10,	color: 'lblue',		description: 'Signs of intrusion have been found around the farm.'},
					{ requiredValue: 20,	color: 'blue',		description: 'Something is spooking the beasts of the farm.'},
					{ requiredValue: 40,	color: 'purple',	description: 'The farm is being sabotaged at night.'},
					{ requiredValue: 60,	color: 'pink',		description: 'The farm is being sabotaged, day and night.'},
					{ requiredValue: 100,	color: 'red',		description: 'Remy\'s goons operate in the open, sabotaging the farm and its business.'},
				]}>>
				<<set _farmSabotageBoxConfig = { name: "Farm Safety", description : '<<relation-text _farmSabotageConfig>>'}>>
			<</if>>
		<</silently>>

		<h4>Farm Status</h4>
		<div id="farm-status" class="relation-box-list">
			<<relation-box-simple _farmHorseBoxConfig>>
			<<relation-box-simple _farmPigBoxConfig>>
			<<relation-box-simple _farmCattleBoxConfig>>
			<<relation-box-simple _farmDogBoxConfig>>
			<<if $farm_stage gte 5>>
			<<relation-box-simple _farmSabotageBoxConfig>>
			<</if>>
		</div>
	<</if>>

	<<if $dockwork gte 2>>
		<div id="other-relation-blocks">
				Docks: 
				<<set $dockstatus = Math.clamp($dockstatus, 0, 100)>>
				<<if $dockstatus gte 100>>
					<span class="green">The other workers respect you.</span>
				<<elseif $dockstatus gte 80>>
					<span class="teal">The other workers accept you.</span>
				<<elseif $dockstatus gte 30>>
					<span class="lblue">The other workers tolerate you.</span>
				<<elseif $dockstatus gte 10>>
					<span class="blue">The other workers view you with suspicion.</span>
				<<else>>
					<span class="purple">The other workers view you with contempt.</span>
				<</if>>
		</div>
	<</if>>

</div>
<br>
<</widget>>
